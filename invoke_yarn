#!/usr/bin/env bash
# Utility script to invoke style checks in front-end directories, or other
# tools in the repository using yarn
# Requires statviz docker-compose service running.
# Usage: ./invoke_yarn lint|format|tsc|graphql-types FILE [FILE...]

mode=$1
shift

declare -a front_files statviz_files shared_components_files

# strip prefix from all given filepaths and add to *_files arrays
for file in "$@"; do
    if [[ $file == front/* ]]; then
        front_files+=("${file#front/}")
    elif [[ $file == statviz/* ]]; then
        statviz_files+=("${file#statviz/}")
    elif [[ $file == shared-components/* ]]; then
        shared_components_files+=("${file#shared-components/}")
    fi
done

yarn() {
    local service container
    service="$1"
    container=boxtribute-"$service"-1
    shift

    if ! [ "$(docker inspect -f '{{.State.Running}}' "$container")" = "true" ]; then
        echo "$service not running"
        docker-compose up -d "$service"
    fi

    docker exec -w /app "$container" yarn "$@"
}

if [[ "$mode" = "lint" ]]; then
    yarn statviz run lint:fix "$@"
elif [[ "$mode" = "format" ]]; then
    yarn statviz run format:write "$@"
elif [[ "$mode" = "tsc" ]]; then
    yarn front --cwd front run tsc:precommit "${front_files[@]}"
    yarn statviz --cwd statviz run tsc:precommit "${statviz_files[@]}"
    yarn statviz --cwd shared-components run tsc:precommit "${shared_components_files[@]}"
elif [[ "$mode" = "graphql-types" ]]; then
    yarn front --cwd front run generate-graphql-ts-types
    yarn statviz --cwd statviz run generate-graphql-ts-types
    yarn statviz --cwd shared-components run generate-graphql-ts-types
else
    echo "Unknown mode: $mode" >&2
    exit 1
fi
