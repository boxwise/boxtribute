# GraphQL input types for mutations **only**.
input BoxCreationInput {
  productId: Int!
  sizeId: Int
  displayUnitId: Int
  measureValue: Float
  numberOfItems: Int
  locationId: Int!
  comment: String
  qrCode: String
  tagIds: [Int!]
}

input BoxUpdateInput {
  labelIdentifier: String!
  productId: Int
  sizeId: Int
  displayUnitId: Int
  measureValue: Float
  numberOfItems: Int
  locationId: Int
  comment: String
  state: BoxState
  " List of all tags that shall be assigned to the box. Any requested tags already assigned to the box will not be assigned again "
  tagIds: [Int!]
  " List of tags that shall be assigned in addition to already assigned tags. Any requested tags already assigned to the box will not be assigned again "
  tagIdsToBeAdded: [Int!]
}

input BoxMoveInput {
  labelIdentifiers: [String!]!
  locationId: Int!
}

input BoxAssignTagInput {
  labelIdentifiers: [String!]!
  tagId: Int!
}

input CustomProductCreationInput {
  name: String!
  categoryId: Int!
  sizeRangeId: Int!
  gender: ProductGender!
  baseId: Int!
  price: Int
  comment: String
  inShop: Boolean
}

input CustomProductEditInput {
  id: ID!
  name: String
  categoryId: Int
  sizeRangeId: Int
  gender: ProductGender
  price: Int
  comment: String
  inShop: Boolean
}

input StandardProductEnableInput {
  standardProductId: Int!
  sizeRangeId: Int
  baseId: Int!
  price: Int
  comment: String
  inShop: Boolean
}

input StandardProductInstantiationEditInput {
  id: ID!
  sizeRangeId: Int
  price: Int
  comment: String
  inShop: Boolean
}

input BeneficiaryCreationInput {
  firstName: String!
  lastName: String!
  baseId: Int!
  groupIdentifier: String!
  dateOfBirth: Date!
  comment: String
  gender: HumanGender!
  languages: [Language!]
  familyHeadId: Int
  isVolunteer: Boolean!
  registered: Boolean!
  signature: String
  dateOfSignature: Date
  tagIds: [Int!]
}

input BeneficiaryUpdateInput {
  id: ID!
  firstName: String
  lastName: String
  groupIdentifier: String
  dateOfBirth: Date
  comment: String
  gender: HumanGender
  languages: [Language!]
  familyHeadId: Int
  isVolunteer: Boolean
  registered: Boolean
  signature: String
  dateOfSignature: Date
}

input TransferAgreementCreationInput {
  initiatingOrganisationId: Int!
  partnerOrganisationId: Int!
  type: TransferAgreementType!
  " Validity dates must be in local time "
  validFrom: Date
  validUntil: Date
  initiatingOrganisationBaseIds: [Int!]!
  partnerOrganisationBaseIds: [Int!]
  comment: String
}

input ShipmentCreationInput {
  sourceBaseId: Int!
  targetBaseId: Int!
  transferAgreementId: Int!
}

input DistributionSpotCreationInput {
  baseId: Int!
  name: String
  comment: String!
  latitude: Float
  longitude: Float
}

input DistributionEventCreationInput {
  distributionSpotId: Int!
  name: String
  plannedStartDateTime: Datetime!
  plannedEndDateTime: Datetime
}

input ShipmentWhenPreparingUpdateInput {
  id: ID!
  targetBaseId: Int
  # label identifiers of boxes prepared for shipment
  preparedBoxLabelIdentifiers: [String!]
  # label identifiers of prepared boxes to be moved back to stock
  removedBoxLabelIdentifiers: [String!]
}

input ShipmentWhenReceivingUpdateInput {
  id: ID!
  # label identifiers of received boxes to be moved into target stock
  receivedShipmentDetailUpdateInputs: [ShipmentDetailUpdateInput!]
  # label identifiers of boxes that went lost during shipment
  lostBoxLabelIdentifiers: [String!]
}

input ShipmentDetailUpdateInput {
  id: ID!
  targetProductId: Int!
  targetLocationId: Int!
  targetSizeId: Int!
  targetQuantity: Int!
}

input PackingListEntryInput {
  distributionEventId: ID!
  productId: Int!
  sizeId: Int!
  numberOfItems: Int!
}

input TagCreationInput {
  name: String!
  description: String
  color: String!
  type: TagType!
  baseId: Int!
}

input TagUpdateInput {
  id: ID!
  name: String
  description: String
  color: String
  type: TagType
}

input TagOperationInput {
  id: ID!
  resourceId: ID!
  resourceType: TaggableResourceType!
}
